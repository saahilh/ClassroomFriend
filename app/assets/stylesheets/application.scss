/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS/SCSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require_tree .
 *= require_self
 */

@import "bootstrap-sprockets";
@import "bootstrap";
@import "font-awesome";
@import "awesomplete";
@import "mCustomScrollbar";

.main-header, .main-header:hover {   
  text-decoration: none;

  h1 {
    font-size: 100px;
  }
}

.awesomplete {
  width: 100%; 
  height: 100%;
}

.pointer {
  cursor: pointer;
}

.center {
  text-align: center;
}

.page-container {
  padding-top: 70px;
}

.arrow {
  cursor: default;
}

img {
  max-width: 100%; 
  max-height: 100%;
}

.separator-lg {
  margin-top: 50px;
}

.separator-md {
  margin-top: 25px;
}

.separator-sm {
  margin-top: 10px;
}

.fit {
  height: 100%;
  width: 100%;
}

i {
  cursor: pointer;
}

.section-padding {
  padding-top: 70px;
  margin-top: -70px;
}

.big-text {
  font-size: 20px;
}

.white {
  color: white;
}

.red {
  color: red;
}

.green {
  color: green;
}

.section-padding .panel-body {
  padding-top: 50px;
  padding-bottom: 50px;
}

body {
  position: relative;
  background-image: url("bg.png");
  background-attachment: fixed;
  background-size: 100%;
}

span, h1, h2, h3, h4, h5 {
  color: white !important;
}

.btn {
  top: "50%";
  left: "50%";
}

.big-btn {
  font-size: 36px; 
  line-height: 50px;
  height: 70px;
}

.big-line {
  height: 70px;
}

.med-line {
  height: 50px;
}

input, textarea, password {
  background-color:black !important;
  color: white !important;
  opacity: 0.6;
  border: none;
  box-shadow: 3px 3px 3px grey;
  border-radius: 5px;
  padding-left: 20px !important; 
  font-size: 20px !important; 
  width:100%;
  height:100%;
}

.close {
  color: white !important; 
  opacity: 0.6 !important;
}

.my-question {
  box-shadow: 3px 3px 3px grey; 
  border-radius: 5px; 
  padding-bottom: 10px !important;
  padding-top: 10px !important;
}

.custom-container {
  display: grid;
  grid-gap: 10% 5%;
  grid-template-rows: repeat(auto-fill, 30vh);
}

form {
  &.one-item{
    display: grid;
    grid-template-columns: [input] 8fr [button] 4fr;
    grid-gap: 2% 2%;

    input {
      grid-column: input;
    }

    button {
      grid-column: button;
    }
  }

  &.two-item{
    display: grid;
    grid-template-columns: [first-input] 4fr [second-input] 4fr [button] 4fr;
    grid-gap: 2% 2%;

    .form-group:nth-child(1) {
      grid-column: first-input;
    }

    .form-group:nth-child(2) {
      grid-column: second-input;
    }

    .form-group:nth-child(3) {
      grid-column: button;
    }
  }
}

.custom-panel {
  display: grid;
  grid-gap: 1% 1%;
  grid-template-rows: [header] 1fr [contents] 11fr;

  .header {
    grid-row: header;
  }

  .contents {
    grid-row: contents;
  }
}

.list {
  display: grid;
  grid-template-columns: repeat(auto-fill, 20vh);
  grid-gap: 3% 3%;
  justify-content: center;

  .grid-item{
    display: flex;
    grid-column: span 1;

    &.empty-grid {
      display: none;
    }

    &:only-child {
      display: block
    }
  }
}

.form-group label {
  color: white;
}