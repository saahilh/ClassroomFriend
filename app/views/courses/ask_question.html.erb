<%= render '/partials/nav_bar', leave_class_href: "/index.html" %>
<%= render '/partials/heading2', course: course.name %>

<%= javascript_tag "room_name = \"#{course.name}\"" %>

<script>
  function sort_question(id, upvotes, downvotes){
    var container = $("#q"+ id + " .upvotes").closest(".question").parent();

    while(parseInt(upvotes) > parseInt(container.prev().find(".upvotes").text())){
      $(container).insertBefore($(container).prev());
    }

    while(parseInt(upvotes) < parseInt(container.next().find(".upvotes").text())){
      $(container).insertAfter($(container).next());
    }

    while((parseInt(upvotes)==parseInt(container.prev().find(".upvotes").text())) && parseInt(downvotes) < parseInt(container.prev().find(".downvotes").text())){
      $(container).insertBefore($(container).prev());
    }

    while((parseInt(upvotes)==parseInt(container.next().find(".upvotes").text())) && parseInt(downvotes) > parseInt(container.next().find(".downvotes").text())){
      $(container).insertAfter($(container).next());
    }
  }

  App.room = App.cable.subscriptions.create({
    channel: "CourseChannel",
    room: room_name
  }, {
    connected: function() {},
    disconnected: function() {},
    received: function(data) {
      if(data["question"]){
        $("#questions").append(data["question"]);
        $(".no-quest").remove();
        sort_question(data["question_id"], "0", "0");
      }
      else if(data["delete_question"])
        $("#questions #q" + data["delete_question"]).remove();
      else if(data["in_class"]){
        if(data["pending"])
          $("#questions #q" + data["in_class"] + " .status").text("Status: pending")
        else
          $("#questions #q" + data["in_class"] + " .status").text("Status: answered in class")
      }
      else if(data["after_class"]){
        if(data["pending"])
          $("#questions #q" + data["after_class"] + " .status").text("Status: pending")
        else
          $("#questions #q" + data["after_class"] + " .status").text("Status: will answer after class")
      }
      else if(data["thumbsup"]){
        $("#q"+ data["thumbsup"] + " .upvotes").text(" " + data["upvote_count"]);
        $("#q"+ data["thumbsup"] + " .downvotes").text(" " + data["downvote_count"]);
        sort_question(data["thumbsup"], data["upvote_count"], data["downvote_count"])
      }
      else if(data["thumbsdown"]){
        $("#q"+ data["thumbsdown"] + " .upvotes").text(" " + data["upvote_count"]);
        $("#q"+ data["thumbsdown"] + " .downvotes").text(" " + data["downvote_count"]);
        sort_question(data["thumbsdown"], data["upvote_count"], data["downvote_count"])
      }
      else if(data["poll"]){
        if($("#poll-modal")[0].style.display=="none"||$("#poll-modal")[0].style.display=="")
          $("#modal-button").click()
        $("#poll-body").html(data["poll"])
      }
      else if(data["poll_end"]){
        $("#poll-body").html(data["chart"])
      }
      else if(data["flag_thresh_alert"]){
        $("#q" + data["flag_thresh_alert"]).hide();
      }
    },
    speak: function(){}
  });

  $(document).on('keydown', "#ask-form input", function (event) {
    var keypressed = event.keyCode || event.which;
    if (keypressed == 13 && $(this).val()!="")
      $("#ask button").click();
  });

  $(document).on('click', "#ask button", function(){
    form = $("#ask-form");
    $.ajax({
      type: form.attr("method"),
      url: form.attr("action"),
      data: form.serialize(),
      success: function(response){ 
        $("#ask input").val("");
      },
      dataType: "json"
    });
  });

</script>

<div id="questions-container" class="row custom-bar" style="overflow-y: auto; overflow-x: hidden; height: 280px">
  <div class="col-md-1"></div>
  <div id="questions" class="col-md-10" style="padding-left: 20px; padding-top: 10px; padding-bottom: 10px;">
    <div class="separator-md"></div>
    <% if course.questions.count==0 %>
    <h1 class="no-quest center"> No questions available </h1>
    <div class="no-quest separator-md"></div>
    <% else %>
    <% course.questions.order("upvotes DESC, downvotes ASC").where("flagged < #{Question::FLAG_THRESHOLD}").all.each do |question| %>
    <% if !flagged["#{question.id}"] %>
    <%= render 'student_questions', question: question %>
    <% end %>
    <% end %>
    <% end %>
  </div>
  <div class="col-md-1"></div>
</div>

<div class="separator-md"></div>

<div id="ask" class="row">
  <div class="col-md-1"></div>
  <form class="col-md-7 big-line" id="ask-form" action="/courses/<%=course.id%>/ask_question" method="post" data-remote="true">
    <input name="question" type="textarea" placeholder="Enter question here"/>
  </form>
  <div class="col-md-2 big-line center" style="padding-right:5px"><button type="submit" class="btn btn-inverse fit big-btn">Ask</button></div>
  <div class="col-md-2"></div>
</div>

<a data-toggle="modal" data-target="#poll-modal" class="hidden" id="modal-button"></a>

<%= render '/polls/student_poll_container_modal' %>